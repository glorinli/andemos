plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
}

android {
    namespace 'xyz.glorin.agp730test'
    compileSdk 32

    defaultConfig {
        applicationId "xyz.glorin.agp730test"
        minSdk 21
        targetSdk 32
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    flavorDimensions "brand", "distribution"
    productFlavors {
        inhouse {
            dimension "distribution"
        }
        playstore {
            dimension "distribution"
        }

        branda {
            dimension "brand"
        }

        brandb {
            dimension "brand"
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

dependencies {

    implementation 'androidx.core:core-ktx:1.7.0'
    implementation 'androidx.appcompat:appcompat:1.5.1'
    implementation 'com.google.android.material:material:1.6.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
}

android.applicationVariants.all { variant ->
    def flavors = variant.productFlavors
    def brand = flavors[0].name
    def dist = flavors[1].name
    def type = variant.buildType.name

    android.sourceSets."$brand".java.srcDirs += ['src/thirdparty/firebase/real/java']
//    android.sourceSets."$brand".java.srcDirs += ['src/main/thirdparty/firebase/real/java']

    android.sourceSets."$brand".java.srcDirs.each { item ->
        println("item ${item.getClass()}")
    }
}

//android.sourceSets.main.java.srcDirs += ['src/thirdparty/firebase/real/java']

//android.sourceSets.each { item ->
//    println("item ${item.getClass()}")
//}